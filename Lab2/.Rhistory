install.packages("ggplot2")
library(ggplot2)
df <- data.frame(x = seq(-3, 3, length.out=100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 0.5)
ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method="lm", formulat=y~x, se=FALSE, color="black", size=2) +
geom_point(color="red", cex=4)
ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method="lm", formula=y~x, se=FALSE, color="black", size=2) +
geom_point(color="red", cex=4)
df$y <- 2 + 3 * df$x + rnorm(100, sd = 0.5)
ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method="lm", formula=y~x, se=FALSE, color="black", size=2) +
geom_point(color="red", cex=4)
library(ggplot2)
df <- data.frame(x = seq(-3, 3, length.out=100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 0.5)
ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method="lm", formula=y~x, se=FALSE, color="black", size=2) +
geom_point(color="red", cex=4)
install.packages("tidyverse")
View(df)
View(df)
url <- getURL('https://www.briankbates.com')
library(XML)
install.packages('XML')
library(XML)
library(RCurl)
install.packages('RCurl')
library(RCurl)
url <- getURL('https://www.briankbates.com')
print(url)
print(getURL('https://www.briankbates.com'))
a <- 1
del(a)
a <- 1:10
a <- 1
b <- 1:10
?getURL
?plot
x <- 1:10
y <- 1:10
plot(x,y)
?getURL
urlExists = url.exists("https://www.briankbates.com")
urlExists = url.exists("http://www.briankbates.com")
plot(1:100, (1:100)^2)
urlExists = url.exists('http://www.briankbates.com/about/')
a = 2
a <- 2
seq(1, 100, 2)
seq(1, 100, -2)
?plot
plot(1:100, (1:100)^2, main="y = x^2")
pnorm(1,0,1)
qnorm(0.8413,0,1)
dnorm(0)
dnorm(1)
?pt
pt(-0.4, 13)
qt(0.09, 13)
?dbinom
dbinom(14,29,0.55)
pbinom(14,29,0.55)
?qnorm
?qchisq
qchisq(0.025, 13, lower.tail=False)
qchisq(0.025, 13, lower.tail=FALSE)
qchisq(0.025, 13)
?pt
pt(-0.4,13,lower.tail=FALSE)
qt(0.045,13,lower.tail=FALSE)
version
git --version
c(2.5, 1, 7)
z = c(2.5, 1, 7)
length(z)
# Basic data types
pi
# String
'Hello, world!'
# Logicals
TRUE
false
class(1)
class(1)
print(class(1))
knitr::opts_chunk$set(echo = TRUE)
cel = c(-9.44, -23.33)
cel
cel = c(-9.44, -23.33)
cel
knitr::opts_chunk$set(echo = TRUE)
cel = c(-9.44, -23.33)
cel
v = c(1, 200)
v
v = seq(1, 200)
?seq
v = seq(200)
x = v %% 2
v = seq(200)
vec200 = v %% 2
vec200
?round
sqrt(1001)
install_github("xdaiISU/classdata")
devtools::install_github("xdaiISU/classdata")
31 * 31
floor(sqrt(1001))
numPerfect = floor(sqrt(31))
numPerfect
numPerfect = floor(sqrt(1001))
numPerfect
library(ggplot2)
library(ggplot2)
mpg
top3 = mpg[order(m$hwy)][1:3]
top3 = mpg[order(mpg$hwy)][1:3]
top3 = mpg[order(mpg$hwy), ][1:3]
top3
top3 = mpg[order(mpg$hwy), ]
top3
?order
top3 = mpg[order(mpg$hwy), decreasing=True]
top3 = mpg[order(mpg$hwy), decreasing=TRUE]
top3 = mpg[order(mpg$hwy, decreasing=TRUE), ]
top3
top3[1:3]
top3[1:3,]
library(ggplot2)
top3 = mpg[order(mpg$hwy, decreasing=TRUE),][1:3,]
top3
mpg
table(mpg$class, mpg$model)
x = mpg[mpg$class = "compact"]
x = mpg[mpg$class == "compact"]
x = mpg$class == "compact"
models = mpg$models[x]
models = mpg$model[x]
?sore
?sort
length(models)
length(unique(models))
unique(models)
models = mpg$model[mpg$class == "compact"]
models = mpg$model[mpg$class == "compact"]
numCompact = unique(models)
numCompact
plot(mpg$hwy, mpg$cty)
plot(mpg$cty, mpg$hwy, main="Highway vs City MPG", xlab="City MPG", ylab="Highway MPG")
plot(mpg$hwy, mpg$cty, main="Highway vs City MPG", xlab="Highway MPG", ylab="City MPG")
plot(density(mpg$hwy))
plot(density(mpg$cty))
plot(density(mpg$hwy), main="Highway MPG")
plot(density(mpg$cty), main="City MPG")
mpg
plot(mpg$cty, mpg$year, main="City MPG over the years", xlab="Year", ylab="City MPG")
plot(mpg$year, mpg$cty, main="City MPG over the years", xlab="Year", ylab="City MPG")
plot(mpg$year, mpg$cty, main="City MPG over the years", xlab="Year", ylab="City MPG")
data_1999 = mpg$cty[mpg$year == 1999]
plot(mpg$year, mpg$cty, main="City MPG over the years", xlab="Year", ylab="City MPG")
data_1999 = mpg$cty[mpg$year == 1999]
summary(data_1999)
data_2008 = mpg$cty[mpg$year == 2008]
summary(data_2008)
data_2008 = mpg$hwy[mpg$year == 2008]
summary(data_2008)
plot(mpg$year, mpg$hwy, main="Highway MPG over the years", xlab="Year", ylab="Highway MPG")
data_2008 = mpg$hwy[mpg$year == 2008]
summary(data_2008)
plot(mpg$year, mpg$cty, main="City MPG over the years", xlab="Year", ylab="City MPG")
city_data_1999 = mpg$cty[mpg$year == 1999]
summary(city_data_1999)
city_data_2008 = mpg$cty[mpg$year == 2008]
summary(city_data_2008)
plot(mpg$year, mpg$hwy, main="Highway MPG over the years", xlab="Year", ylab="Highway MPG")
hwy_data_1999 = mpg$hwy[mpg$year == 1999]
summary(data_1999)
hwy_data_2008 = mpg$hwy[mpg$year == 2008]
summary(data_2008)
plot(density(mpg$cty[mpg$year=1999]), main="City MPG")
plot(density(mpg$cty[mpg$year == 1999]), main="City MPG")
lines(density(mpg$cty[mpg$year == 2008]))
?plot
plot(density(mpg$cty[mpg$year == 1999]), col = "red", main="City MPG")
lines(density(mpg$cty[mpg$year == 2008]), col = "blue")
plot(density(mpg$cty[mpg$year == 1999]), col = "red", main="City MPG")
lines(density(mpg$cty[mpg$year == 2008]), col = "blue")
legend("right", legend=c("1999", "2008"), col=c("red", "blue"))
plot(density(mpg$cty[mpg$year == 1999]), col = "red", main="City MPG")
lines(density(mpg$cty[mpg$year == 2008]), col = "blue")
legend("right", legend=c("1999", "2008"), col=c("red", "blue"), lty=c(1,1))
plot(density(mpg$hwy[mpg$year == 1999]), col = "red", main="Highway MPG")
lines(density(mpg$hwy[mpg$year == 2008]), col = "blue")
legend("right", legend=c("1999", "2008"), col=c("red", "blue"), lty=c(1,1))
setwd("~/Google Drive/Classes/DS 202 - Exploratory Data Analysis/Labs/Lab2")
choco = read.csv("choco.csv")
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
boxplot(df$Rating ~ df$Company.Location)
head(df)
str(df)
dim(choco)
dim(df)
df = choco[choco$Company.Location == "U.S.A." || choco$Company.Location == "France" || choco$Company.Location == "Canada", ]
dim(choco)
dim(df)
x = seq(1:100,1)
x = seq(1,100,1)
str(df)
str(mtcars)
factor(mtcars$vs, labels=c("V", "Straight"))
str(mtcars)
m = mtcars
factor(m$vs, labels=c("V", "straight"))
m$vs = factor(m$vs, labels=c("V", "straight"))
str(mtcars)
str(m)
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
str(m)
df = m[m$vs == "V"]
df = m[m$vs == "V", ]
df
boxplot(m$hp ~ m$vs)
?mtcars
boxplot(df$mpg ~ df$vs)
str(df)
str(mtcars)
str(df)
str(m)
df2 = m[m$vs == "straight", ]
str(df2)
boxplot(df$mpg)
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Com]
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
df$Company.Location = factor(df$Company.Location)
str(df)
boxplot(df$Rating ~ df$Company.Location)
boxplot(df$Rating ~ df$Company.Location)
boxplot(df$Cocoa.Pct ~ df$Company.Location)
boxplot(df$Rating ~ df$Company.Location)
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
# Boxplot of ratings for each company provides a visual representation of the summary data
boxplot(df$Rating ~ df$Company.Location)
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
# Boxplot of ratings for each company provides a visual representation of the summary data
boxplot(df$Rating ~ df$Company.Location)
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
# Refactor
df$Company.Location = factor(df$Company.Location)
# Boxplot of ratings for each company provides a visual representation of the summary data
boxplot(df$Rating ~ df$Company.Location)
boxplot(choco$Company.Location)
boxplot(table(choco$Company.Location))
barplot(table(choco$Company.Location))
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
# Refactor
df$Company.Location = factor(df$Company.Location)
# Boxplot of ratings for each company provides a visual representation of the summary data
reorder(df$Company.Location, df$Rating)
boxplot(df$Rating ~ df$Company.Location)
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
# Refactor
df$Company.Location = factor(df$Company.Location)
# Boxplot of ratings for each company provides a visual representation of the summary data
reorder(df$Company.Location, df$Rating)
boxplot(df$Rating ~ df$Company.Location)
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
# Refactor
df$Company.Location = factor(df$Company.Location)
# Boxplot of ratings for each company provides a visual representation of the summary data
reorder(df$Company.Location, df$Rating, decreasing=TRUE)
boxplot(df$Rating ~ df$Company.Location)
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
# Refactor
df$Company.Location = factor(df$Company.Location, levels=c("U.S.A.", "France", "Canada"))
# Boxplot of ratings for each company provides a visual representation of the summary data
#reorder(df$Company.Location, df$Rating, decreasing=TRUE)
boxplot(df$Rating ~ df$Company.Location)
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
# Refactor
df$Company.Location = factor(df$Company.Location, levels=c("U.S.A.", "France", "Canada"))
# Boxplot of ratings for each company provides a visual representation of the summary data
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
rm(list=ls())
m = matrix(data=c(1,2), nrow=2, ncol = 1)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
m = matrix(data=c(1,2), nrow=2, ncol = 1, byrow=TRUE)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
mean(choco$Rating)
choco = read.csv("choco.csv")
mean(choco$Rating)
dim(choco)[1]
c <- table(choco$Review.Date)
barplot(c, main="Reviews per Year", xlab="Year", ylab="Reviews")
t = table(choco$Company.Location)
order(t, decreasing=TRUE)
first = t[58]
first
second = t[19]
second
third = t[8]
third
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
# Refactor
df$Company.Location = factor(df$Company.Location, levels=c("U.S.A.", "France", "Canada"))
# Boxplot of ratings for each company provides a visual representation of the summary data
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
m = matrix(data=c(1,2), nrow=2, ncol = 1, byrow=TRUE)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
boxplot(df$Cocoa.Percent ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
choco = read.csv("choco.csv")
mean(choco$Rating)
dim(choco)[1]
c <- table(choco$Review.Date)
barplot(c, main="Reviews per Year", xlab="Year", ylab="Reviews")
t = table(choco$Company.Location)
order(t, decreasing=TRUE)
first = t[58]
first
second = t[19]
second
third = t[8]
third
# Construct a new data frame holding only the data of the top three companies
df = choco[choco$Company.Location == "U.S.A." | choco$Company.Location == "France" | choco$Company.Location == "Canada", ]
# Refactor
df$Company.Location = factor(df$Company.Location, levels=c("U.S.A.", "France", "Canada"))
# Boxplot of ratings for each company provides a visual representation of the summary data
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
m = matrix(data=c(1,2), nrow=2, ncol = 1, byrow=TRUE)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
boxplot(df$Cocoa.Percent ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
m = matrix(data=c(1,2), nrow=2, ncol = 1, byrow=TRUE)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
boxplot(df$Cocoa.Pct ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
m = matrix(data=c(1,1, 2, 2), nrow=4, ncol = 1, byrow=TRUE)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
boxplot(df$Cocoa.Pct ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
m = matrix(data=c(1, 1, 2, 2), nrow=4, ncol = 1, byrow=TRUE)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
boxplot(df$Cocoa.Pct ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
m = matrix(data=c(1, 1, 2, 2), nrow=4, ncol = 1, byrow=TRUE)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
boxplot(df$Cocoa.Pct ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
m = matrix(data=c(1, 1, 1, 1, 2, 2, 2, 2), nrow=8, ncol = 1, byrow=TRUE)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
boxplot(df$Cocoa.Pct ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
m = matrix(data=c(1, 1, 1, 1, 2, 2, 2, 2), nrow=8, ncol = 1, byrow=TRUE)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
boxplot(df$Cocoa.Pct ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
m = matrix(data=c(1, 1, 1, 1, 2, 2, 2, 2), nrow=8, ncol = 1, byrow=TRUE)
layout(m)
boxplot(df$Rating ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
boxplot(df$Cocoa.Pct ~ df$Company.Location, main="Ratings of Top Three Locations", xlab="Company Location", ylab="Rating")
str(choco)
t = table(choco$Company.Location)
order(t, decreasing=TRUE)
first = t[58]
first
second = t[19]
second
third = t[8]
third
rm(list=ls())
