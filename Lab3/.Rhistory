library(dplyr)
# Factoring and ordering Marital data
df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE))
# Factoring and ordering Marital data
df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE), na.rm=TRUE)
# Factoring and ordering Marital data
df %>% group_by(MARITAL) #%>% summarise(avg = mean(AGE), na.rm=TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
# Read the RDS data into a dataframe and look at the structure
df = readRDS("HAPPY.rds")
str(df)
# Part 1: Cleaning data 1
# Convert 'IAP', 'DK', and 'NA' character values into numeric NA values
df[df == 'IAP' | df == 'DK' | df == 'NA'] = NA
# Part 1: Cleaning data 2
# Convert age into numeric value, ignoring NA values
df$AGE[df$AGE == '89 OR OLDER'] = 89
df$AGE = as.numeric(df$AGE, na.rm=TRUE)
str(df)
# Factoring and ordering Marital data
df %>% group_by(MARITAL) #%>% summarise(avg = mean(AGE), na.rm=TRUE)
df$MARITAL = factor(df$MARITAL)
levels(df$MARITAL)
# Factoring and ordering Marital data
df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE), na.rm=TRUE)
df$MARITAL = factor(df$MARITAL)
levels(df$MARITAL)
# Factoring and ordering Marital data
df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
df$MARITAL = factor(df$MARITAL)
levels(df$MARITAL)
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
df$MARITAL = factor(df$MARITAL)
levels(df$MARITAL)
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
str(marital.df)
df$MARITAL = factor(df$MARITAL)
levels(df$MARITAL)
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
order(martial.df)
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
order(martial.df, na.rm=TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
# Read the RDS data into a dataframe and look at the structure
df = readRDS("HAPPY.rds")
str(df)
# Part 1: Cleaning data 1
# Convert 'IAP', 'DK', and 'NA' character values into numeric NA values
df[df == 'IAP' | df == 'DK' | df == 'NA'] = NA
# Part 1: Cleaning data 2
# Convert age into numeric value, ignoring NA values
df$AGE[df$AGE == '89 OR OLDER'] = 89
df$AGE = as.numeric(df$AGE, na.rm=TRUE)
str(df)
# Factoring data
df$SEX = factor(df$SEX, levels=c("Male", "Female"))
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
order(martial.df, na.rm=TRUE)
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
order(marital.df, na.rm=TRUE)
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
order(marital.df$AGE, na.rm=TRUE)
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
str(marital.df)
order(marital.df$AGE, na.rm=TRUE)
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
str(marital.df)
order(marital.df$avg, na.rm=TRUE)
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
str(marital.df)
order(marital.df$avg)
df$MARITAL = factor(df$MARITAL, levels)
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
str(marital.df)
level.order = order(marital.df$avg)
df$MARITAL = factor(df$MARITAL, levels=marital.df$MARITAL[level.order])
# Factoring and ordering Marital data
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
str(marital.df)
level.order = order(marital.df$avg)
df$MARITAL = factor(df$MARITAL, levels=marital.df$MARITAL[level.order])
levels(df$MARITAL)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
# Read the RDS data into a dataframe and look at the structure
df = readRDS("HAPPY.rds")
str(df)
# Part 1: Cleaning data 1
# Convert 'IAP', 'DK', and 'NA' character values into numeric NA values
df[df == 'IAP' | df == 'DK' | df == 'NA'] = NA
# Part 1: Cleaning data 2
# Convert age into numeric value, ignoring NA values
df$AGE[df$AGE == '89 OR OLDER'] = 89
df$AGE = as.numeric(df$AGE, na.rm=TRUE)
str(df)
# Factoring data
df$SEX = factor(df$SEX, levels=c("Male", "Female"))
# Factor the MARITAL group by average age
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
# Determine the order of the levels based on average age
level.order = order(marital.df$avg)
# Refactor using the new level order
df$MARITAL = factor(df$MARITAL, levels=marital.df$MARITAL[level.order])
# Factoring decree
df$DEGREE = factor(df$DEGREE, levels=c("LT HIGH SCHOOL", "HIGH SCHOOL", "JUNIOR COLLEGE", "BACHELOR", "GRADUATE"))
df$HAPPY = factor(df$HAPPY, levels=c("NOT TOO HAPPY", "PRETTY HAPPY", "VERY HAPPY"))
df$HEALTH = factor(df$HEALTH, levels=c("POOR", "FAIR", "GOOD", "EXCELLENT"))
df$FINRELA = factor(df$FINRELA, levels=c("FAR BELOW AVERAGE", "BELOW AVERAGE", "AVERAGE", "ABOVE AVERAGE", "FAR ABOVE AVERAGE"))
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
df$POLVIEWS = factor(df$POLVIEWS, levels=c("EXTREMELY LIBERAL", "LIBERAL", "SLIGHTLY LIBERAL", "MODERATE", "SLGHTLY CONSERVATIVE", "CONSERVATIVE", "EXTRMLY CONSERVATIVE"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
# Read the RDS data into a dataframe and look at the structure
df = readRDS("HAPPY.rds")
str(df)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
# Read the RDS data into a dataframe and look at the structure
df = readRDS("HAPPY.rds")
str(df)
# Part 1: Cleaning data 1
# Convert 'IAP', 'DK', and 'NA' character values into numeric NA values
df[df == 'IAP' | df == 'DK' | df == 'NA'] = NA
# Part 1: Cleaning data 2
# Convert age into numeric value, ignoring NA values
df$AGE[df$AGE == '89 OR OLDER'] = 89
df$AGE = as.numeric(df$AGE, na.rm=TRUE)
#str(df)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
# Read the RDS data into a dataframe and look at the structure
df = readRDS("HAPPY.rds")
str(df)
# Part 1: Cleaning data 1
# Convert 'IAP', 'DK', and 'NA' character values into numeric NA values
df[df == 'IAP' | df == 'DK' | df == 'NA'] = NA
# Part 1: Cleaning data 2
# Convert age into numeric value, ignoring NA values
df$AGE[df$AGE == '89 OR OLDER'] = 89
df$AGE = as.numeric(df$AGE, na.rm=TRUE)
#str(df)
# Factoring sex data
df$SEX = factor(df$SEX, levels=c("Male", "Female"))
# Factor the MARITAL group by average age
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
# Determine the order of the levels based on average age
level.order = order(marital.df$avg)
# Refactor using the new level order
df$MARITAL = factor(df$MARITAL, levels=marital.df$MARITAL[level.order])
# Factoring decree
df$DEGREE = factor(df$DEGREE, levels=c("LT HIGH SCHOOL", "HIGH SCHOOL", "JUNIOR COLLEGE", "BACHELOR", "GRADUATE"))
df$HAPPY = factor(df$HAPPY, levels=c("NOT TOO HAPPY", "PRETTY HAPPY", "VERY HAPPY"))
df$HEALTH = factor(df$HEALTH, levels=c("POOR", "FAIR", "GOOD", "EXCELLENT"))
df$FINRELA = factor(df$FINRELA, levels=c("FAR BELOW AVERAGE", "BELOW AVERAGE", "AVERAGE", "ABOVE AVERAGE", "FAR ABOVE AVERAGE"))
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
df$POLVIEWS = factor(df$POLVIEWS, levels=c("EXTREMELY LIBERAL", "LIBERAL", "SLIGHTLY LIBERAL", "MODERATE", "SLGHTLY CONSERVATIVE", "CONSERVATIVE", "EXTRMLY CONSERVATIVE"))
knitr::opts_chunk$set(echo = TRUE)
library(classdata)
library(ggplot2)
str(titanic)
ggplot(titanic, aes(x=Sex, fill=Survived)) + geom_bar(position='fill') + ylab('Proportion')
# Never work on the original data
dat = titanic
# Simply reordering the factors
dat$Sex = factor(dat$Sex, c('Female', 'Male'))
ggplot(dat, aes(x=Sex, fill=Survived)) + geom_bar(position='fill')
library(ggmosaic)
# The mosaic shows additional information on the x-axis
ggplot(titanic) + geom_mosaic(aes(x=product(Sex), fill=Survived))
ggplot(titanic) + geom_mosaic(aes(x=product(Sex), fill=Survived)) + facet_grid(Age ~ Sex)
# Or by crew
ggplot(titanic) + geom_mosaic(aes(x=product(Sex), fill=Survived)) + facet_grid(Age ~ Class)
# Basically the same data set, but in a different format
data(Titanic)
str(Titanic)
Titanic
# Convert the data into a DataFrame
dat = as.data.frame(Titanic)
str(dat)
# Note the new feature Frequency
head(dat)
# Visualize this
ggplot(dat) + geom_mosaic(aes(x=product(Class), fill=Survived, weight=Freq))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggmosaic)
dat2016 = filter(df, YEAR == 2016)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggmosaic)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggmosaic)
# Read the RDS data into a dataframe and look at the structure
df = readRDS("HAPPY.rds")
str(df)
# Part 1: Cleaning data 1
# Convert 'IAP', 'DK', and 'NA' character values into numeric NA values
df[df == 'IAP' | df == 'DK' | df == 'NA'] = NA
# Part 1: Cleaning data 2
# Convert age into numeric value, ignoring NA values
df$AGE[df$AGE == '89 OR OLDER'] = 89
df$AGE = as.numeric(df$AGE, na.rm=TRUE)
str(df)
# Factoring data
df$SEX = factor(df$SEX, levels=c("Male", "Female"))
# Factor the MARITAL group by average age
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
# Determine the order of the levels based on average age
level.order = order(marital.df$avg)
# Refactor using the new level order
df$MARITAL = factor(df$MARITAL, levels=marital.df$MARITAL[level.order])
# Factoring decree
df$DEGREE = factor(df$DEGREE, levels=c("LT HIGH SCHOOL", "HIGH SCHOOL", "JUNIOR COLLEGE", "BACHELOR", "GRADUATE"))
df$HAPPY = factor(df$HAPPY, levels=c("NOT TOO HAPPY", "PRETTY HAPPY", "VERY HAPPY"))
df$HEALTH = factor(df$HEALTH, levels=c("POOR", "FAIR", "GOOD", "EXCELLENT"))
df$FINRELA = factor(df$FINRELA, levels=c("FAR BELOW AVERAGE", "BELOW AVERAGE", "AVERAGE", "ABOVE AVERAGE", "FAR ABOVE AVERAGE"))
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
df$POLVIEWS = factor(df$POLVIEWS, levels=c("EXTREMELY LIBERAL", "LIBERAL", "SLIGHTLY LIBERAL", "MODERATE", "SLGHTLY CONSERVATIVE", "CONSERVATIVE", "EXTRMLY CONSERVATIVE"))
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=EDUCATION)) + geom_bar(position='fill')
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
dat2016 = filter(df, YEAR == 2016, na.rm=TRUE)
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE), na.rm=TRUE) + geom_bar(position='fill')
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE, na.rm=TRUE)) + geom_bar(position='fill')
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "IND", "NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE, na.rm=TRUE)) + geom_bar(position='fill')
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
levels(df$PARTYID)
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "IND", "NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
levels(df$PARTYID)
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "IND", "NEAR DEM", "INDEPENDENT", "IND", "NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
levels(df$PARTYID)
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "IND", "NEAR DEM", "INDEPENDENT", "NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE, na.rm=TRUE)) + geom_bar(position='fill')
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
levels(df$PARTYID)
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "NEAR DEM", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggmosaic)
# Read the RDS data into a dataframe and look at the structure
df = readRDS("HAPPY.rds")
str(df)
# Part 1: Cleaning data 1
# Convert 'IAP', 'DK', and 'NA' character values into numeric NA values
df[df == 'IAP' | df == 'DK' | df == 'NA'] = NA
# Part 1: Cleaning data 2
# Convert age into numeric value, ignoring NA values
df$AGE[df$AGE == '89 OR OLDER'] = 89
df$AGE = as.numeric(df$AGE, na.rm=TRUE)
str(df)
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
levels(df$PARTYID)
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "NEAR DEM", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggmosaic)
# Read the RDS data into a dataframe and look at the structure
df = readRDS("HAPPY.rds")
str(df)
# Part 1: Cleaning data 1
# Convert 'IAP', 'DK', and 'NA' character values into numeric NA values
df[df == 'IAP' | df == 'DK' | df == 'NA'] = NA
# Part 1: Cleaning data 2
# Convert age into numeric value, ignoring NA values
df$AGE[df$AGE == '89 OR OLDER'] = 89
df$AGE = as.numeric(df$AGE, na.rm=TRUE)
str(df)
# Factoring data
df$SEX = factor(df$SEX, levels=c("Male", "Female"))
# Factor the MARITAL group by average age
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
# Determine the order of the levels based on average age
level.order = order(marital.df$avg)
# Refactor using the new level order
df$MARITAL = factor(df$MARITAL, levels=marital.df$MARITAL[level.order])
# Factoring decree
df$DEGREE = factor(df$DEGREE, levels=c("LT HIGH SCHOOL", "HIGH SCHOOL", "JUNIOR COLLEGE", "BACHELOR", "GRADUATE"))
df$HAPPY = factor(df$HAPPY, levels=c("NOT TOO HAPPY", "PRETTY HAPPY", "VERY HAPPY"))
df$HEALTH = factor(df$HEALTH, levels=c("POOR", "FAIR", "GOOD", "EXCELLENT"))
df$FINRELA = factor(df$FINRELA, levels=c("FAR BELOW AVERAGE", "BELOW AVERAGE", "AVERAGE", "ABOVE AVERAGE", "FAR ABOVE AVERAGE"))
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
levels(df$PARTYID)
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "NEAR DEM", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
df$POLVIEWS = factor(df$POLVIEWS, levels=c("EXTREMELY LIBERAL", "LIBERAL", "SLIGHTLY LIBERAL", "MODERATE", "SLGHTLY CONSERVATIVE", "CONSERVATIVE", "EXTRMLY CONSERVATIVE"))
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE, na.rm=TRUE)) + geom_bar(position='fill')
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
dat2016 = filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
ggplot(dat2016) + geom_mosaic(aes(x=product(PARTYID), fill=DEGREE))
dat2016 = filter(df, YEAR == 2016, na.rm=TRUE)
dat2016 = filter(df, YEAR == 2016, !is.na())
dat2016 = df %>% na.omit() %>% filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
ggplot(dat2016) + geom_mosaic(aes(x=product(PARTYID), fill=DEGREE))
dat2016 = df %>% na.omit() %>% filter(df, YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
#ggplot(dat2016) + geom_mosaic(aes(x=product(PARTYID), fill=DEGREE))
dat2016 = df %>% na.omit() %>% filter(YEAR == 2016)
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
#ggplot(dat2016) + geom_mosaic(aes(x=product(PARTYID), fill=DEGREE))
dat2016 = df %>%
filter(YEAR == 2016) %>%
filter(!is.na(PARTYID))
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
#ggplot(dat2016) + geom_mosaic(aes(x=product(PARTYID), fill=DEGREE))
dat2016 = df %>%
filter(YEAR == 2016) %>%
filter(!is.na(PARTYID))
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
ggplot(dat2016) + geom_mosaic(aes(x=product(PARTYID), fill=DEGREE))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggmosaic)
# Read the RDS data into a dataframe and look at the structure
df = readRDS("HAPPY.rds")
levels(df$PARTYID)
# Part 1: Cleaning data 1
# Convert 'IAP', 'DK', and 'NA' character values into numeric NA values
df[df == 'IAP' | df == 'DK' | df == 'NA'] = NA
# Part 1: Cleaning data 2
# Convert age into numeric value, ignoring NA values
df$AGE[df$AGE == '89 OR OLDER'] = 89
df$AGE = as.numeric(df$AGE, na.rm=TRUE)
str(df)
# Factoring data
df$SEX = factor(df$SEX, levels=c("Male", "Female"))
# Factor the MARITAL group by average age
marital.df = df %>% group_by(MARITAL) %>% summarise(avg = mean(AGE, na.rm=TRUE))
# Determine the order of the levels based on average age
level.order = order(marital.df$avg)
# Refactor using the new level order
df$MARITAL = factor(df$MARITAL, levels=marital.df$MARITAL[level.order])
# Factoring decree
df$DEGREE = factor(df$DEGREE, levels=c("LT HIGH SCHOOL", "HIGH SCHOOL", "JUNIOR COLLEGE", "BACHELOR", "GRADUATE"))
df$HAPPY = factor(df$HAPPY, levels=c("NOT TOO HAPPY", "PRETTY HAPPY", "VERY HAPPY"))
df$HEALTH = factor(df$HEALTH, levels=c("POOR", "FAIR", "GOOD", "EXCELLENT"))
df$FINRELA = factor(df$FINRELA, levels=c("FAR BELOW AVERAGE", "BELOW AVERAGE", "AVERAGE", "ABOVE AVERAGE", "FAR ABOVE AVERAGE"))
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "NEAR DEM", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
df$POLVIEWS = factor(df$POLVIEWS, levels=c("EXTREMELY LIBERAL", "LIBERAL", "SLIGHTLY LIBERAL", "MODERATE", "SLGHTLY CONSERVATIVE", "CONSERVATIVE", "EXTRMLY CONSERVATIVE"))
dat2016 = df %>%
filter(YEAR == 2016) %>%
filter(!is.na(PARTYID))
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
# This plot looks terrible and needs to be cleaned
ggplot(dat2016) + geom_mosaic(aes(x=product(PARTYID), fill=DEGREE))
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
#df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "NEAR DEM", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
df$PARTYID = factor(df$PARTYID)
levels(df$PARTYID)
# This particular factor order is based on Democrats being "LEFT" and Republicans "RIGHT"
#df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "NEAR DEM", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
df$PARTYID = factor(df$PARTYID)
levels(df$PARTYID)
# There is something wrong with this
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
#df$PARTYID = factor(df$PARTYID)
#levels(df$PARTYID)
# There is something wrong with this
df$PARTYID = factor(df$PARTYID, levels=c("STRONG DEMOCRAT", "NOT STRONG DEMOCRAT", "IND, NEAR DEM", "INDEPENDENT", "IND, NEAR REP", "NOT STR REPUBLICAN", "STRONG REPUBLICAN", "OTHER PARTY"))
#df$PARTYID = factor(df$PARTYID)
levels(df$PARTYID)
dat2016 = df %>%
filter(YEAR == 2016) %>%
filter(!is.na(PARTYID))
# Simply reordering the factors
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
# This plot looks terrible and needs to be cleaned
ggplot(dat2016) + geom_mosaic(aes(x=product(PARTYID), fill=DEGREE))
dat2016 = df %>%
filter(YEAR == 2016) %>%
filter(!is.na(PARTYID))
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
ggplot(dat2016, aes(x=PARTYID, fill=FINRA)) + geom_bar(position='fill')
dat2016 = df %>%
filter(YEAR == 2016) %>%
filter(!is.na(PARTYID))
ggplot(dat2016, aes(x=PARTYID, fill=DEGREE)) + geom_bar(position='fill')
ggplot(dat2016, aes(x=PARTYID, fill=FINRELA)) + geom_bar(position='fill')
# This plot looks terrible and needs to be cleaned
#ggplot(dat2016) + geom_mosaic(aes(x=product(PARTYID), fill=DEGREE))
setwd("~/Google Drive/Classes/DS 202 - Exploratory Data Analysis/Labs/Lab3")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
hclean <- HAPPY
knitr::opts_chunk$set(echo = TRUE)
HAPPY <- readRDS('HAPPY.rds')
str(HAPPY)
HAPPY[HAPPY == "IAP" | HAPPY == "DK"| HAPPY == 'NA'] <- NA
str(HAPPY)
HAPPY$AGE[HAPPY$AGE == '89 OR OLDER'] <- 89
HAPPY$AGE <- as.numeric(HAPPY$AGE)
str(HAPPY)
col <- c('HAPPY', 'SEX', 'MARITAL', 'DEGREE', 'FINRELA', 'HEALTH', 'PARTYID', 'POLVIEWS')
HAPPY[col] <- lapply(HAPPY[col], factor)
str(HAPPY)
h <- HAPPY
levels(h$MARITAL)
h$MARITAL <- factor(h$MARITAL, levels = c('NEVER MARRIED', 'MARRIED', 'SEPARATED', 'DIVORCED', 'WIDOWED'))
levels(h$DEGREE)
h$DEGREE <- factor(h$DEGREE, levels = c('LT HIGH SCHOOL', 'HIGH SCHOOL', 'JUNIOR COLLEGE', 'BACHELOR', 'GRADUATE'))
levels(h$FINRELA)
h$FINRELA <- factor(h$FINRELA, levels = c('FAR BELOW AVERAGE', 'BELOW AVERAGE', 'AVERAGE', 'ABOVE AVERAGE', 'FAR ABOVE AVERAGE'))
levels(h$HEALTH)
h$HEALTH <- factor(h$HEALTH, levels = c('POOR', 'FAIR', 'GOOD', 'EXCELLENT'))
levels(h$PARTYID)
h$PARTYID <- factor(h$PARTYID, levels = c('STRONG DEMOCRAT', 'NOT STR DEMOCRAT', 'IND,NEAR DEMOCRAT', 'INDEPENDENT', 'IND,NEAR REP', 'NOT STR REPUBLICAN', 'STRONG REPUBLICAN', 'OTHER PARTY'))
levels(h$POLVIEWS)
h$POLVIEWS <- factor(h$POLVIEWS, levels = c('EXTREMELY LIBERAL', 'LIBERAL', 'SLIGHTLY LIBERAL', 'MODERATE', 'SLIGHTLY CONSERVATIVE', 'CONSERVATIVE', 'EXTREMLY CONSERVATIVE'))
HAPPY <- h
str(HAPPY)
library(ggplot2)
ggplot(HAPPY, aes(x = HAPPY)) + geom_bar()
ggplot(HAPPY, aes(x = YEAR)) + geom_bar()
ggplot(HAPPY, aes(x = AGE)) + geom_bar()
ggplot(HAPPY, aes(x = SEX)) + geom_bar()
ggplot(HAPPY, aes(x = MARITAL)) + geom_bar()
ggplot(HAPPY, aes(x = DEGREE)) + geom_bar()
ggplot(HAPPY, aes(x = FINRELA)) + geom_bar()
ggplot(HAPPY, aes(x = HEALTH)) + geom_bar()
ggplot(HAPPY, aes(x = PARTYID)) + geom_bar()
ggplot(HAPPY, aes(x = POLVIEWS)) + geom_bar()
ggplot(df) +
geom_mosaic(aes(x = product(DEGREE), fill = HEALTH)) +
facet_grid(SEX~HAPPY) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df) +
geom_mosaic(aes(x = product(DEGREE), fill = HEALTH)) +
facet_grid(SEX~HAPPY) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
