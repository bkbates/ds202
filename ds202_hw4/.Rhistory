filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick = high.gain)
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == high.gain)
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights, col="red")
points(x = time, y = high.gain.weights, col="blue")
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights, col="red")
points(x = time, y = highest.gain.weights, col="blue")
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights, col="red", lty=1)
points(x = time, y = highest.gain.weights, col="blue", lty=1)
?lty
??lty
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights)
lines(x = time, y = lowes.gain.weights, col="red", lty=1)
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights)
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights)
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
legend("bottomright", legend=c("Lowest gain", "Highest gain"), col=c("red", "blue"))
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights)
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
legend("bottomright", legend=c("Lowest gain", "Highest gain"), col=c("red", "blue"), lty=c(1,1))
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
#plot(x = time, y = lowest.gain.weights)
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Chick is originally an ordered factor.  Convert it to use it
total.gain$Chick = as.numeric(levels(total.gain$Chick)[total.gain$Chick])
cat(sep="", "The chick with the lowest weight gain: ", total.gain$Chick[1], ", on a diet of: ", total.gain$Diet[1], "\n")
cat(sep="", "The chick with the highest weight gain: ", total.gain$Chick[dim(total.gain)[1]], ", on a diet of: ", total.gain$Diet[dim(total.gain)[1]], "\n")
# Graphical summary
ggplot(total.gain, aes(x = reorder(Chick, Weight.gain, abs), y = Weight.gain)) + geom_col() + labs(x = "Chick", y = "Weight Gain")
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights)
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
legend("bottomright", legend=c("Lowest gain", "Highest gain"), col=c("red", "blue"), lty=c(1,1))
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights)
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1, xlab="Time", ylab="Weight")
legend("bottomright", legend=c("Lowest gain", "Highest gain"), col=c("red", "blue"), lty=c(1,1))
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights)
lines(x = time, y = lowest.gain.weights, col="red", lty=1, xlab="Time", ylab="Weight")
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
legend("bottomright", legend=c("Lowest gain", "Highest gain"), col=c("red", "blue"), lty=c(1,1))
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Plot
plot(x = time, y = lowest.gain.weights, xlab="Time", ylab="Weight")
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
legend("bottomright", legend=c("Lowest gain", "Highest gain"), col=c("red", "blue"), lty=c(1,1))
length(complete)
for(i in time) {
print(i)
}
v = rep(0, length(time))
for(i in time) {
}
v = rep(0, length(time))
for(i in time) {
v[i] = mean(weightgain$weight[weightgain$Time == i])
}
v = rep(0, length(time))
for(i in time) {
v[i] = mean(weightgain$weight[weightgain$Time == i])
}
lines(i, v, col="orange")
v = rep(0, length(time))
for(i in time) {
v[i] = mean(weightgain$weight[weightgain$Time == i])
}
lines(time, v, col="orange")
v = rep(0, length(time))
length(time)
for(i in time) {
v[i] = mean(weightgain$weight[weightgain$Time == i])
}
lines(time, v, col="orange")
v = rep(0, length(time))
length(time)
for(i in time) {
print(i)
v[i] = mean(weightgain$weight[weightgain$Time == i])
}
lines(time, v, col="orange")
v = rep(0, length(time))
length(time)
for(i in seq_len(length(time))) {
print(i)
v[i] = mean(weightgain$weight[weightgain$Time == time[i]])
}
lines(time, v, col="orange")
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Extra credit
v = rep(0, length(time))
for(i in seq_len(length(time))) {
print(i)
v[i] = mean(weightgain$weight[weightgain$Time == time[i]])
}
# Plot
plot(x = time, y = lowest.gain.weights, xlab="Time", ylab="Weight")
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
lines(x = time, y = v, col="orange", lty=1)
legend("bottomright", legend=c("Lowest gain", "Highest gain", "Average"), col=c("red", "blue", "orange"), lty=c(1,1, 1))
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Extra credit
v = rep(0, length(time))
for(i in seq_len(length(time))) {
print(i)
v[i] = mean(weightgain$weight[weightgain$Time == time[i]])
}
# Plot
plot(x = time, y = lowest.gain.weights, xlab="Time", ylab="Weight", xlim=c(0, 24), ylim=c(0, 350))
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
lines(x = time, y = v, col="orange", lty=1)
legend("bottomright", legend=c("Lowest gain", "Highest gain", "Average"), col=c("red", "blue", "orange"), lty=c(1,1, 1))
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Extra credit
v = rep(0, length(time))
for(i in seq_len(length(time))) {
print(i)
v[i] = mean(weightgain$weight[weightgain$Time == time[i]])
}
# Plot
plot(x = time, y = lowest.gain.weights, xlab="Time", ylab="Weight", xlim=c(0, 24), ylim=c(0, 350))
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
lines(x = time, y = v, col="orange", lty=1)
legend("upperleft", legend=c("Lowest gain", "Highest gain", "Average"), col=c("red", "blue", "orange"), lty=c(1,1, 1))
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Extra credit
v = rep(0, length(time))
for(i in seq_len(length(time))) {
print(i)
v[i] = mean(weightgain$weight[weightgain$Time == time[i]])
}
# Plot
plot(x = time, y = lowest.gain.weights, xlab="Time", ylab="Weight", xlim=c(0, 24), ylim=c(0, 350))
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
lines(x = time, y = v, col="orange", lty=1)
legend("topleft", legend=c("Lowest gain", "Highest gain", "Average"), col=c("red", "blue", "orange"), lty=c(1,1, 1))
??chp
??pch
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Extra credit
v = rep(0, length(time))
for(i in seq_len(length(time))) {
v[i] = mean(weightgain$weight[weightgain$Time == time[i]])
}
# Plot
plot(x = time, y = lowest.gain.weights, xlab="Time", ylab="Weight", xlim=c(0, 24), ylim=c(0, 350))
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
lines(x = time, y = v, col="orange", lty=1)
legend("topleft", legend=c("Lowest gain", "Highest gain", "Average"), col=c("red", "blue", "orange"), lty=c(1,1, 1))
# Determine the maximum weight gain for each chick
total.gain <- weightgain %>%
group_by(Chick) %>%
filter(Time == max(weightgain$Time)) %>%
arrange(Weight.gain)
# Get the ordered factor
lowest.gain = total.gain$Chick[1]
# Get the time and weight for the chick with the lowest weight gain
lowest.gain.data = df %>%
filter(Chick == lowest.gain)
time = lowest.gain.data$Time
lowest.gain.weights = lowest.gain.data$weight
# Repeat for the highest gaining chick
highest.gain = total.gain$Chick[dim(total.gain)[1]]
highest.gain.data = df %>%
filter(Chick == highest.gain)
highest.gain.weights = highest.gain.data$weight
# Extra credit
v = rep(0, length(time))
for(i in seq_len(length(time))) {
v[i] = mean(weightgain$weight[weightgain$Time == time[i]])
}
# Plot
plot(x = time, y = lowest.gain.weights, xlab="Time", ylab="Weight", xlim=c(0, 22), ylim=c(0, 350))
lines(x = time, y = lowest.gain.weights, col="red", lty=1)
lines(x = time, y = highest.gain.weights, col="blue", lty=1)
lines(x = time, y = v, col="orange", lty=1)
legend("topleft", legend=c("Lowest gain", "Highest gain", "Average"), col=c("red", "blue", "orange"), lty=c(1,1, 1))
ChickWeight
str(ChickWeight)
